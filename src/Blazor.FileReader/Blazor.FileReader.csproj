<Project Sdk="Microsoft.NET.Sdk.Razor">


  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net5.0</TargetFrameworks>
    <BlazorLinkOnBuild>true</BlazorLinkOnBuild>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <LangVersion>latest</LangVersion>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <Authors>Tor Knutsson (Tewr)</Authors>
    <PackageProjectUrl>https://github.com/Tewr/BlazorFileReader</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Tewr/BlazorFileReader</RepositoryUrl>
    <Description>Create Read-Only file streams from file input elements or drop targets in Blazor.</Description>
    <PackageTags>blazor blazor-component stream filestream file-stream read-file filereader</PackageTags>
    <Configurations>Debug;Release;Ghpages</Configurations>
    <PackageId>Tewr.Blazor.FileReader</PackageId>
    <PackageReleaseNotes>new APIs for .NET5: CreateObjectUrl, Expose Js file using JSObjectReference.</PackageReleaseNotes>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>icon.png</PackageIcon>
    <RazorLangVersion>3.0</RazorLangVersion>
    <AssemblyName>Tewr.Blazor.FileReader</AssemblyName>
    <RootNamespace>Tewr.Blazor.FileReader</RootNamespace>
    <AssemblyVersion>3.1.0.21158</AssemblyVersion>
    <Version>3.1.0.21158</Version>
    <FileVersion>3.1.0.21158</FileVersion>
  </PropertyGroup>
  <ItemGroup>
    <None Include="icon.png" Pack="true" Visible="false" PackagePath="" />
  </ItemGroup>

  <PropertyGroup>
    <NoWarn>1701;1702;NU5104</NoWarn>
    <DocumentationFile>Blazor.FileReader.xml</DocumentationFile>
  </PropertyGroup>

  <Target Name="BundleTypescript" BeforeTargets="CreateManifestResourceNames" Condition="'$(Configuration)'=='Debug'">
    <!-- using ts-bundle to create a single output js file from several ts files  -->
    <Exec Command="tsc-bundle $(ProjectDir)tsconfig.json --outFile $(ProjectDir)wwwroot\FileReaderComponent.js --entryPoint FileReaderComponent --transform tsPreprocessor.js" />
  </Target>
  
  
  <ItemGroup>
    <!-- .js/.css files will be referenced via <script>/<link> tags; other content files will just be included in the app's 'dist' directory without any tags referencing them -->
    <EmbeddedResource Include="wwwroot\**\*.js" LogicalName="blazor:js:%(RecursiveDir)%(Filename)%(Extension)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net5.0'">
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="5.0.0" />
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="5.0.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="3.1.3" />
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="1.1.0" />
  </ItemGroup>
 
  <ItemGroup>
    <Content Update="tsconfig.json">
      <Pack>false</Pack>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Extensions\" />
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <PropertyGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
    <DefineConstants>$(DefineConstants);NETSTANDARD20</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)'=='net5.0'">
    <DefineConstants>$(DefineConstants);NET5</DefineConstants>
  </PropertyGroup>

</Project>
